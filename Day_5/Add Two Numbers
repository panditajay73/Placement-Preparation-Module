/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
   public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
    if(l1 == null || l2 == null){
        return l1 == null ? l2 : l1;
    }

    ListNode res = new ListNode();
    ListNode temp = res;
    int t = 0;
    while(l1 != null || l2 != null){
        int a = 0, b = 0;
        if(l1 != null){
            a = l1.val;
            l1 = l1.next;
        }
        if(l2 != null){
            b = l2.val;
            l2 = l2.next;
        }
        int count = a + b + t;
        t = count / 10;
        temp.next = new ListNode(count % 10);
        temp = temp.next;
    }
    if(t != 0) temp.next = new ListNode(t);
    return res.next;
}
}
