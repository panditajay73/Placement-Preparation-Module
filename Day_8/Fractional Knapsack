class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        Arrays.sort(arr, Comparator.comparingDouble((Item item) -> (double) item.value / item.weight).reversed());

        double totalValue = 0.0;
        int currentWeight = 0;

        for (int i = 0; i < n; i++) {
            if (currentWeight + arr[i].weight <= W) {
                currentWeight += arr[i].weight;
                totalValue += arr[i].value;
            } else {
                int remainingWeight = W - currentWeight;
                totalValue += (double) arr[i].value / arr[i].weight * remainingWeight;
                break;
            }
        }

        return totalValue;
    }
}
